{"version":3,"sources":["asserts/windows-11-wallpapers.jpg","components/Questions.js","components/Frontpage.js","App.js","reportWebVitals.js","index.js"],"names":["Questions","steps","label","options","answer","theme","useTheme","React","activeStep","setActiveStep","array","a","b","c","d","e","answers","setanswers","chart","setchart","value","setvalue","score","maxSteps","length","answersave","target","sx","width","border","padding","minWidth","flexGrow","margin","Paper","square","elevation","display","alignItems","height","pl","bgcolor","Typography","FormControl","component","RadioGroup","name","FormControlLabel","control","Radio","onChange","MobileStepper","variant","position","nextButton","Button","size","onClick","forEach","ele","console","log","prevActiveStep","disabled","direction","backButton","style","text","StyledInputElement","styled","CustomInput","forwardRef","props","ref","InputUnstyled","components","Input","setname","usestyle","makeStyles","front_page","backgroundImage","images","backgroundPosition","backgroundSize","justifyContent","zIndex","top","left","transition","transitionDelay","deactivate","transform","box","flexDirection","background","gap","Frontpage","classes","useState","alert","setalert","alertmsg","setalertmsg","alerttype","setalerttype","className","Box","Alert","severity","Avatar","src","placeholder","App","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bd52d0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/windows-11-wallpapers.f4f94400.jpg\";","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MobileStepper from '@mui/material/MobileStepper';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport { FormControl, FormControlLabel, Radio, RadioGroup } from '@mui/material';\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\nexport default function Questions() {\r\n  const steps = [\r\n    {\r\n      label: \"Which one is correct team name in NBA?\",\r\n      options: [\r\n        \"New York Bulls\",\r\n        \"Los Angeles Kings\",\r\n        \"Golden State Warriros\",\r\n        \"Huston Rocket\",\r\n      ],\r\n      answer: \"Huston Rocket\",\r\n    },\r\n    {\r\n      label: \"Capital of India\",\r\n      options: [\"Mumbai\", \"Bhopal\", \"New Delhi\", \"Kolkata\"],\r\n      answer: \"New Delhi\",\r\n    },\r\n    {\r\n      label: \"5 + 7 = ?\",\r\n      options: [\"10\", \"11\", \"12\", \"13\"],\r\n      answer: \"12\",\r\n    },\r\n    {\r\n      label: \"11*12  = ?\",\r\n      options: [\"133\", \"132\", \"140\", \"142\"],\r\n      answer: \"132\",\r\n    },\r\n    {\r\n      label: \"12 - 8 = ?\",\r\n      options: [\"1\", \"2\", \"3\", \"4\"],\r\n      answer: \"4\",\r\n    },\r\n  ];\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const array = [\"a\",\"b\",\"c\",\"d\" , \"e\"];\r\n  const [answers, setanswers] = React.useState({a: \"\",b: \"\",c: \"\",d: \"\", e:\"\"})\r\n  const [chart, setchart] = React.useState(false)\r\n  const [value, setvalue] = React.useState(0)\r\n  let score = 0;\r\n\r\n  const maxSteps = steps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const answersave = (e)=>{\r\n    setanswers({...answers, [array[activeStep]] : e.target.value})\r\n  }\r\n\r\n  const handlesubmit = ()=>{\r\n    array.forEach((ele)=>{\r\n      switch (ele) {\r\n        case \"a\":\r\n          if(answers.a === steps[0].answer){score++};\r\n          break;\r\n        case \"b\":\r\n          if(answers.b === steps[1].answer){score++};\r\n          break;\r\n        case \"c\":\r\n          if(answers.c === steps[2].answer){score++};\r\n          break;\r\n        case \"d\":\r\n          if(answers.d === steps[3].answer){score++};\r\n          break;\r\n        case \"e\":\r\n          if(answers.e === steps[4].answer){score++};\r\n          break;\r\n      }\r\n    })\r\n    console.log(score)\r\n    setchart(true)\r\n    setvalue(score)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Box sx={{ width: \"70vw\",border: \"1px solid\",padding: \"10px 30px\",minWidth : \"300px\",flexGrow: 1 , margin: \"20px auto\" }}>\r\n      <Paper\r\n        square\r\n        elevation={0}\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          height: 50,\r\n          pl: 2,\r\n          bgcolor: 'background.default',\r\n        }}\r\n      >\r\n        <Typography>{steps[activeStep].label}</Typography>\r\n      </Paper>\r\n      <FormControl component=\"fieldset\">\r\n      <RadioGroup\r\n        aria-label=\"Questions\"\r\n        name=\"radio-buttons-group\"\r\n      >\r\n        <FormControlLabel value={steps[activeStep].options[0]} control={<Radio onChange={answersave}/>} label={steps[activeStep].options[0]} />\r\n        <FormControlLabel value={steps[activeStep].options[1]} control={<Radio onChange={answersave} />} label={steps[activeStep].options[1]}/>\r\n        <FormControlLabel value={steps[activeStep].options[2]} control={<Radio onChange={answersave} />} label={steps[activeStep].options[2]} />\r\n        <FormControlLabel value={steps[activeStep].options[3]} control={<Radio onChange={answersave}/>} label={steps[activeStep].options[3]} />\r\n      </RadioGroup>\r\n    </FormControl>\r\n      <MobileStepper\r\n        variant=\"text\"\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n            activeStep === maxSteps - 1?<Button\r\n            size=\"small\"\r\n            onClick={handlesubmit}\r\n          >\r\n            submit\r\n          </Button>:\r\n          <Button\r\n            size=\"small\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n          >\r\n            Next\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === 'rtl' ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </Box>\r\n    {chart===true?\r\n    <div style={{ width: 200, height: 200 , margin : \"20px auto\" }}>\r\n        <CircularProgressbar value={`${value * 20}`} text={`${value * 20}%`} />\r\n      </div>:\"\"}\r\n      </>\r\n  );\r\n}\r\n","import { Alert, Avatar, Button } from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { Box } from \"@mui/system\";\r\nimport InputUnstyled from \"@mui/base/InputUnstyled\";\r\nimport { styled } from \"@mui/system\";\r\nimport React, { useState } from \"react\";\r\nimport images from \"../asserts/windows-11-wallpapers.jpg\";\r\nimport Questions from \"./Questions\";\r\n\r\n\r\nconst StyledInputElement = styled(\"input\")`\r\n  width: 200px;\r\n  font-size: 1rem;\r\n  font-family: IBM Plex Sans, sans-serif;\r\n  font-weight: 400;\r\n  line-height: 1.4375em;\r\n  background: rgb(243, 246, 249);\r\n  border: 1px solid #e5e8ec;\r\n  border-radius: 10px;\r\n  padding: 6px 10px;\r\n  color: #20262d;\r\n  transition: width 300ms ease;\r\n\r\n  &:hover {\r\n    background: #eaeef3;\r\n    border-color: #e5e8ec;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n    width: 220px;\r\n    transition: width 200ms ease-out;\r\n  }\r\n`;\r\n\r\nconst CustomInput = React.forwardRef(function CustomInput(props, ref) {\r\n  return (\r\n    <InputUnstyled\r\n      components={{ Input: StyledInputElement }}\r\n      {...props}\r\n      ref={ref}\r\n      onChange={(e) => props.setname(e.target.value)}\r\n    />\r\n  );\r\n});\r\n\r\nconst usestyle = makeStyles({\r\n  front_page: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    backgroundImage: `url(${images})`,\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    position: \"absolute\",\r\n    zIndex: \"100\",\r\n    top: 0,\r\n    left: 0,\r\n    transition: \"all 1s\",\r\n    transitionDelay: \".5s\",\r\n  },\r\n  deactivate: {\r\n    transform: \"translateY(-100%)\",\r\n  },\r\n  box: {\r\n    padding: \"3vh 5vw\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    background: \"radial-gradient(black, transparent)\",\r\n    gap: \"20px\",\r\n  },\r\n});\r\n\r\nconst Frontpage = () => {\r\n  const classes = usestyle();\r\n  const [name, setname] = useState(\"\");\r\n  const [alert, setalert] = useState(false);\r\n  const [alertmsg, setalertmsg] = useState(\"\");\r\n  const [alerttype, setalerttype] = useState(\"\");\r\n\r\n  const handleclick = () => {\r\n    if (name === \"\") {\r\n      setalert(true);\r\n      setalerttype(\"error\");\r\n      setalertmsg(\"fill the name\");\r\n    } else if (name.length < 4) {\r\n      setalert(true);\r\n      setalerttype(\"error\");\r\n      setalertmsg(\"name should be of minimum 4 character\");\r\n    } else {\r\n      setalert(true);\r\n      setalerttype(\"success\");\r\n      setalertmsg(\"successfull\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          alerttype === \"success\"\r\n            ? `${classes.front_page} ${classes.deactivate}`\r\n            : `${classes.front_page}`\r\n        }\r\n      >\r\n        <Box className={classes.box}>\r\n          {alert === true ? <Alert severity={alerttype}>{alertmsg}</Alert> : \"\"}\r\n          <Avatar\r\n            style={{ height: \"10vmax\", width: \"10vmax\" }}\r\n            src=\"/broken-image.jpg\"\r\n          />\r\n          <CustomInput\r\n            aria-label=\"Demo input\"\r\n            value={name}\r\n            placeholder=\"Enter your name\"\r\n            setname={setname}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleclick}>\r\n            Start Test\r\n          </Button>\r\n        </Box>\r\n      </div>\r\n      <div className=\"questionpage\">\r\n        <Questions />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Frontpage;\r\n","import './App.css';\nimport Frontpage from './components/Frontpage';\n\nfunction App() {\n\n\n  return (\n    <div style={{overflow : \"hidden\"}}>\n      <Frontpage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}